{"ast":null,"code":"export default {\n  name: \"Notice\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [{\n          required: true,\n          name: 'Please enter product name',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          img: 'please upload product image',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      categoryData: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadCategory();\n  },\n  methods: {\n    loadCategory() {\n      this.$request.get('/category/selectAll').then(res => {\n        if (res.code === '200') {\n          this.categoryData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      if ('Pass' !== this.user.status) {\n        this.$message.warning('您的店铺信息还未审核通过，暂时不允许发布商品');\n        return;\n      }\n      this.form = {}; // 新增数据的时候清空数据\n      initWangEditor('');\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      initWangEditor(this.form.description || '');\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    viewEditor(content) {\n      this.viewData = content;\n      this.editorVisible = true;\n    },\n    cancel() {\n      this.fromVisible = false;\n      location.href = '/goods';\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/product/update' : '/product/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('Save Successfully');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('Are you sure about deleting it?', 'Confirm Delete', {\n        type: \"warning\",\n        confirmButtonText: \"Confirm\",\n        cancelButtonText: \"Cancel\"\n      }).then(response => {\n        this.$request.delete('/product/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('Delete Successfully');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('Please select data');\n        return;\n      }\n      this.$confirm('Are you sure about deleting them/it?', 'Confirm Delete', {\n        type: \"warning\",\n        confirmButtonText: \"Confirm\",\n        cancelButtonText: \"Cancel\"\n      }).then(response => {\n        this.$request.delete('/product/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('Delete Successfully');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/product/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      this.form.img = response.data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","title","required","trigger","content","img","ids","categoryData","created","load","loadCategory","methods","$request","get","then","res","code","$message","error","msg","handleAdd","status","warning","initWangEditor","handleEdit","row","stringify","description","viewEditor","viewData","editorVisible","cancel","location","href","save","$refs","formRef","validate","valid","url","id","method","success","del","$confirm","type","confirmButtonText","cancelButtonText","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList"],"sources":["src/views/manager/Product.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"Please enter product name\" style=\"width: 200px\" v-model=\"name\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">Search</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">Reset</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">Add</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">Delete</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"id\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column label=\"Image\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px; \" v-if=\"scope.row.img\"\r\n                        :src=\"scope.row.img\" :preview-src-list=\"[scope.row.img]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"name\" label=\"Name\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"description\" label=\"Description\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"price\" label=\"Price\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"CategoryName\" label=\"Category Name\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"SellerName\" label=\"Seller Name\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column prop=\"count\" label=\"Count\" show-overflow-tooltip></el-table-column>\r\n        <el-table-column label=\"Operation\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">Edit</el-button>\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>Delete</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"Information\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"Image\">\r\n          <el-upload\r\n              class=\"avatar-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleAvatarSuccess\"\r\n          >\r\n            <el-button type=\"primary\">Upload Image</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item prop=\"name\" label=\"Name\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"name\" label=\"Price\">\r\n          <el-input v-model=\"form.price\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"CategoryId\" label=\"Category\">\r\n          <el-select v-model=\"form.categoryId\" placeholder=\"Please choose category\" style=\"width: 100%\">\r\n            <el-option v-for=\"item in categoryData\" :label=\"item.name\" :value=\"item.id\" :key=\"item.id\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item prop=\"description\" label=\"Description\">\r\n\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"Notice\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        title: [\r\n          {required: true, name: 'Please enter product name', trigger: 'blur'},\r\n        ],\r\n        content: [\r\n          {required: true, img: 'please upload product image', trigger: 'blur'},\r\n        ]\r\n      },\r\n      ids: [],\r\n      categoryData: [],\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.loadCategory()\r\n  },\r\n  methods: {\r\n    loadCategory() {\r\n      this.$request.get('/category/selectAll').then(res => {\r\n        if (res.code === '200') {\r\n          this.categoryData = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      if ('Pass' !== this.user.status) {\r\n        this.$message.warning('您的店铺信息还未审核通过，暂时不允许发布商品')\r\n        return\r\n      }\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      initWangEditor('')\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      initWangEditor(this.form.description || '')\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    viewEditor(content) {\r\n      this.viewData = content\r\n      this.editorVisible = true\r\n    },\r\n    cancel() {\r\n      this.fromVisible = false\r\n      location.href = '/goods'\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/product/update' : '/product/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('Save Successfully')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('Are you sure about deleting it?', 'Confirm Delete', {type: \"warning\",confirmButtonText:\"Confirm\",cancelButtonText:\"Cancel\"}).then(response => {\r\n        this.$request.delete('/product/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('Delete Successfully')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('Please select data')\r\n        return\r\n      }\r\n      this.$confirm('Are you sure about deleting them/it?', 'Confirm Delete', {type: \"warning\",confirmButtonText:\"Confirm\",cancelButtonText:\"Cancel\"}).then(response => {\r\n        this.$request.delete('/product/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('Delete Successfully')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/product/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.name = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleAvatarSuccess(response, file, fileList) {\r\n      this.form.img = response.data\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}